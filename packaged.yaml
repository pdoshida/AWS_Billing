AWSTemplateFormatVersion: '2010-09-09'
Description: Notify Slack every day of AWS billing
Globals:
  Function:
    Timeout: 10
Outputs:
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - BillingIamRole
      - Arn
Parameters:
  SlackWebhookUrl:
    Default: hoge
    Type: String
Resources:
  BillingIamRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ce:GetCostAndUsage
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: NotifySlackToBillingLambdaPolicy
    Type: AWS::IAM::Role
  HelloWorldFunction:
    Properties:
      CodeUri: s3://lab-billing-lambda-bucket/30deb81bf20594f023d45c01f2f507d3
      Environment:
        Variables:
          SLACK_WEBHOOK_URL:
            Ref: SlackWebhookUrl
      Events:
        NotifySlack:
          Properties:
            Schedule: cron(0 0 * * ? *)
          Type: Schedule
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
        - BillingIamRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
